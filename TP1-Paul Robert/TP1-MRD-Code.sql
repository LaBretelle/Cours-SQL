-- MySQL Script generated by MySQL Workbench
-- Sun Jan  5 17:25:35 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`assiste à`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`assiste à` (
  `id association` INT NOT NULL,
  PRIMARY KEY (`id association`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`reçoit la note`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`reçoit la note` (
  `id association note` INT NOT NULL,
  PRIMARY KEY (`id association note`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Etudiant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Etudiant` (
  `idEtudiant` INT GENERATED ALWAYS AS () VIRTUAL,
  `nom` TINYTEXT NULL,
  `prénom` TINYTEXT NULL,
  `date de naissance` DATE NULL,
  `Instrument` TINYTEXT NULL,
  `assiste à_id association` INT NOT NULL,
  `reçoit la note_id association note` INT NOT NULL,
  `Etudiant_idEtudiant` INT ZEROFILL NOT NULL,
  PRIMARY KEY (`idEtudiant`),
  UNIQUE INDEX `idEtudiant_UNIQUE` (`idEtudiant` ASC) VISIBLE,
  INDEX `fk_Etudiant_assiste à1_idx` (`assiste à_id association` ASC) VISIBLE,
  INDEX `fk_Etudiant_reçoit la note1_idx` (`reçoit la note_id association note` ASC) VISIBLE,
  INDEX `fk_Etudiant_Etudiant1_idx` (`Etudiant_idEtudiant` ASC) VISIBLE,
  CONSTRAINT `fk_Etudiant_assiste à1`
    FOREIGN KEY (`assiste à_id association`)
    REFERENCES `mydb`.`assiste à` (`id association`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Etudiant_reçoit la note1`
    FOREIGN KEY (`reçoit la note_id association note`)
    REFERENCES `mydb`.`reçoit la note` (`id association note`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Etudiant_Etudiant1`
    FOREIGN KEY (`Etudiant_idEtudiant`)
    REFERENCES `mydb`.`Etudiant` (`idEtudiant`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Enseignement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Enseignement` (
  `Dénomination` MEDIUMTEXT NOT NULL,
  `nombre d'ECTS` INT NULL,
  `date et heure` DATE NULL,
  `assiste à_id association` INT NOT NULL,
  PRIMARY KEY (`Dénomination`),
  INDEX `fk_Enseignement_assiste à_idx` (`assiste à_id association` ASC) VISIBLE,
  CONSTRAINT `fk_Enseignement_assiste à`
    FOREIGN KEY (`assiste à_id association`)
    REFERENCES `mydb`.`assiste à` (`id association`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Professeur`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Professeur` (
  `idProfesseur` INT GENERATED ALWAYS AS () VIRTUAL,
  `nom` TINYTEXT NULL,
  `prénom` TINYTEXT NULL,
  `date de naissance` DATE NULL,
  `reçoit la note_id association note` INT NOT NULL,
  `Enseignement_Dénomination` MEDIUMTEXT NOT NULL,
  PRIMARY KEY (`idProfesseur`),
  UNIQUE INDEX `idProfesseur_UNIQUE` (`idProfesseur` ASC) VISIBLE,
  INDEX `fk_Professeur_reçoit la note1_idx` (`reçoit la note_id association note` ASC) VISIBLE,
  INDEX `fk_Professeur_Enseignement1_idx` (`Enseignement_Dénomination` ASC) VISIBLE,
  CONSTRAINT `fk_Professeur_reçoit la note1`
    FOREIGN KEY (`reçoit la note_id association note`)
    REFERENCES `mydb`.`reçoit la note` (`id association note`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Professeur_Enseignement1`
    FOREIGN KEY (`Enseignement_Dénomination`)
    REFERENCES `mydb`.`Enseignement` (`Dénomination`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Note`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Note` (
  `Note` INT NOT NULL,
  `Coefficient` INT NOT NULL,
  `reçoit la note_id association note` INT NOT NULL,
  PRIMARY KEY (`Note`),
  INDEX `fk_Note_reçoit la note1_idx` (`reçoit la note_id association note` ASC) VISIBLE,
  CONSTRAINT `fk_Note_reçoit la note1`
    FOREIGN KEY (`reçoit la note_id association note`)
    REFERENCES `mydb`.`reçoit la note` (`id association note`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Salle`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Salle` (
  `Nom` TINYTEXT NOT NULL,
  `Nombre de places` INT NOT NULL,
  `assiste à_id association` INT NOT NULL,
  PRIMARY KEY (`Nom`),
  INDEX `fk_Salle_assiste à1_idx` (`assiste à_id association` ASC) VISIBLE,
  CONSTRAINT `fk_Salle_assiste à1`
    FOREIGN KEY (`assiste à_id association`)
    REFERENCES `mydb`.`assiste à` (`id association`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
